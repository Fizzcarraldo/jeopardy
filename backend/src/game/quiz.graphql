type Game {
  id: Int
  players: [Player]
  activePlayer: Int
  state: String
  quiz: Quiz
  selectedQuestion: SelectedQuestion
}

type Player {
  name: String
  score: Int
}

type Quiz {
  id: Int
  categories: [Category]
  questions: [Question]
}

type Category {
  id: String
  displayName: String
}

type SelectedQuestion {
  categorie: String
  value: Int
}

type Question {
  categorie: String
  owner: Int
  value: Int
  question: String
  image: String
  answer: String
}

type Subscription {
  gameSubscription(gameId: Int!): Game
}

type Query { 
  getAllGames(id: Int): [Game]
  getGame(gameId: Int!): Game
  getQuiz(gameId: Int!): Quiz
  getPlayer(gameId: Int!, playerId: Int!): Player
}

type Mutation {
  startNewGame(client: String): Int
  createPlayer(gameId: Int!, name: String): Int
  selectQuestion(gameId: Int, categorie: String, value: Int): Boolean
  pushBuzzer(gameId: Int, playerId: Int): Boolean
  hostStartGame(gameId: Int, playerId: Int): Boolean
  verifyAnswer(gameId: Int, verfication: String): Boolean
}
